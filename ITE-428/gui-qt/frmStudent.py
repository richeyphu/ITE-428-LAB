# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'frmStudent.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QTableWidgetItem
import pymongo
import dns  # dnspython

cloudDatabase = "mongodb+srv://qt:<password>@cluster0.hf3dm.mongodb.net/QT?retryWrites=true&w=majority"


class Ui_frm_student(object):
    def setupUi(self, frm_student):
        frm_student.setObjectName("frm_student")
        frm_student.resize(741, 593)
        self.tbl_Student = QtWidgets.QTableWidget(frm_student)
        self.tbl_Student.setGeometry(QtCore.QRect(20, 240, 701, 281))
        self.tbl_Student.setObjectName("tbl_Student")
        self.tbl_Student.setColumnCount(0)
        self.tbl_Student.setRowCount(0)
        self.btn_ID_Search = QtWidgets.QPushButton(frm_student)
        self.btn_ID_Search.setGeometry(QtCore.QRect(410, 110, 221, 51))
        font = QtGui.QFont()
        font.setFamily("Kanit")
        font.setPointSize(12)
        self.btn_ID_Search.setFont(font)
        self.btn_ID_Search.setObjectName("btn_ID_Search")
        self.lbl_Found = QtWidgets.QLabel(frm_student)
        self.lbl_Found.setGeometry(QtCore.QRect(20, 180, 701, 51))
        font = QtGui.QFont()
        font.setFamily("Kanit")
        font.setPointSize(16)
        self.lbl_Found.setFont(font)
        self.lbl_Found.setObjectName("lbl_Found")
        self.lbl_ID_Search = QtWidgets.QLabel(frm_student)
        self.lbl_ID_Search.setGeometry(QtCore.QRect(50, 60, 341, 31))
        font = QtGui.QFont()
        font.setPointSize(17)
        self.lbl_ID_Search.setFont(font)
        self.lbl_ID_Search.setObjectName("lbl_ID_Search")
        self.txt_ID_Search = QtWidgets.QTextEdit(frm_student)
        self.txt_ID_Search.setGeometry(QtCore.QRect(410, 60, 221, 41))
        self.txt_ID_Search.setObjectName("txt_ID_Search")

        self.retranslateUi(frm_student)
        QtCore.QMetaObject.connectSlotsByName(frm_student)

        self.showStudent()
        # Event-Driven
        self.btn_ID_Search.clicked.connect(self.findStudent)

    def showStudent(self):
        # self.lbl_Found.setText("Adisak")
        with pymongo.MongoClient(cloudDatabase) as conn:
            db = conn.get_database('Tni')
            count = db.students.count_documents({})
            cursor = db.students.find({})
            self.lbl_Found.setText("Found = {}".format(count))
            # Table Widget
            self.tbl_Student.setRowCount(count)
            self.tbl_Student.setColumnCount(5)
            # สร้าง Header
            header1 = QtWidgets.QTableWidgetItem("ID")
            header2 = QtWidgets.QTableWidgetItem("NAME")
            header3 = QtWidgets.QTableWidgetItem("MAJOR")
            header4 = QtWidgets.QTableWidgetItem("GPAX")
            header5 = QtWidgets.QTableWidgetItem("BMI")
            # ใส่ Header ให้ Table
            self.tbl_Student.setHorizontalHeaderItem(0, header1)
            self.tbl_Student.setHorizontalHeaderItem(1, header2)
            self.tbl_Student.setHorizontalHeaderItem(2, header3)
            self.tbl_Student.setHorizontalHeaderItem(3, header4)
            self.tbl_Student.setHorizontalHeaderItem(4, header5)
            self.tbl_Student.setColumnWidth(1, 250)
            # เอาข้อมูลใน cursor ไปใส่เป็น item
            row = 0
            for i in cursor:
                self.tbl_Student.setItem(row, 0, QTableWidgetItem("{}".format(i['student_id'])))
                self.tbl_Student.setItem(row, 1, QTableWidgetItem("{} {}"
                                                                  .format(i['name'].upper(), i['lastname'].upper())))
                self.tbl_Student.setItem(row, 2, QTableWidgetItem("{}".format(i['major'])))
                self.tbl_Student.setItem(row, 3, QTableWidgetItem("{:.2f}".format(i['gpax'])))
                self.tbl_Student.setItem(row, 4, QTableWidgetItem("{:.2f}"
                                                                  .format(self.calBMI(i['physical_data']['weight'],
                                                                                      i['physical_data']['height']))))
                row += 1

    def findStudent(self):
        stu_id = self.txt_ID_Search.toPlainText()
        with pymongo.MongoClient(cloudDatabase) as conn:
            db = conn.get_database('Tni')
            condition = {'student_id': {"$regex": f'{stu_id}', "$options": "i"}}
            count = db.students.count_documents(condition)
            cursor = db.students.find(condition)
            self.lbl_Found.setText("Found = {}".format(count))
            self.tbl_Student.setRowCount(count)
            for i, v in enumerate(cursor):
                self.tbl_Student.setItem(i, 0, QTableWidgetItem("{}".format(v['student_id'])))
                self.tbl_Student.setItem(i, 1, QTableWidgetItem("{} {}"
                                                                .format(v['name'].upper(), v['lastname'].upper())))
                self.tbl_Student.setItem(i, 2, QTableWidgetItem("{}".format(v['major'])))
                self.tbl_Student.setItem(i, 3, QTableWidgetItem("{:.2f}".format(v['gpax'])))
                self.tbl_Student.setItem(i, 4, QTableWidgetItem("{:.2f}"
                                                                .format(self.calBMI(v['physical_data']['weight'],
                                                                                    v['physical_data']['height']))))

    def calBMI(self, w, h):
        return w / ((h / 100) ** 2)

    def retranslateUi(self, frm_student):
        _translate = QtCore.QCoreApplication.translate
        frm_student.setWindowTitle(_translate("frm_student", "Tni --> students"))
        self.btn_ID_Search.setText(_translate("frm_student", "ค้นหา นักศึกษา"))
        self.lbl_Found.setText(_translate("frm_student", "Found"))
        self.lbl_ID_Search.setText(_translate("frm_student", "กรอกรหัสนักศึกษา (บางส่วนได้)"))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    frm_student = QtWidgets.QDialog()
    ui = Ui_frm_student()
    ui.setupUi(frm_student)
    frm_student.show()
    sys.exit(app.exec_())
